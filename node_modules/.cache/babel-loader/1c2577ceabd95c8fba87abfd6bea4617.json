{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\src\\\\components\\\\versionFive\\\\Showcase.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport \"react-modal-video/css/modal-video.min.css\";\nimport ModalVideo from \"react-modal-video\";\nimport { ValidationForm, TextInput, SelectGroup } from \"react-bootstrap4-form-validation\";\n\nvar Showcase =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Showcase, _Component);\n\n  function Showcase(props) {\n    var _this;\n\n    _classCallCheck(this, Showcase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Showcase).call(this));\n\n    _this.handleForm = function (e) {\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      axios.post(\"https://formcarry.com/s/zER7_IhCyp5\", _this.state, {\n        headers: {\n          Accept: \"application/json\"\n        }\n      }).then(function (response) {\n        document.getElementById(\"requestForm\").reset();\n        that.setState({\n          successMsg: \"We received your submission\"\n        });\n        document.getElementById(\"requestForm\").reset();\n      }).catch(function (error) {});\n    };\n\n    _this.handleFields = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.state = {\n      isOpen: false\n    };\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Showcase).call(this, props));\n\n    _this.handleForm = function (e) {\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      axios.post(\"https://formcarry.com/s/zER7_IhCyp5\", _this.state, {\n        headers: {\n          Accept: \"application/json\"\n        }\n      }).then(function (response) {\n        document.getElementById(\"requestForm\").reset();\n        that.setState({\n          successMsg: \"We received your submission\"\n        });\n        document.getElementById(\"requestForm\").reset();\n      }).catch(function (error) {});\n    };\n\n    _this.handleFields = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      problem: \"\",\n      successMsg: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Showcase, [{\n    key: \"openModal\",\n    value: function openModal() {\n      this.setState({\n        isOpen: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"home\",\n        className: \"main-banner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"creative-bg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"pattern\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"d-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-table-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main-banner-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.props.showcasenName), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.props.showcaseDescription), React.createElement(\"a\", {\n        href: this.props.showcaseBtnOneLink,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.props.showcaseBtnOneText), React.createElement(ModalVideo, {\n        channel: \"youtube\",\n        isOpen: this.state.isOpen,\n        videoId: \"vr0qNXmkUJ8\",\n        onClose: function onClose() {\n          return _this2.setState({\n            isOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.openModal,\n        className: \"btn btn-secondary \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icofont-ui-play\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), this.props.showcaseBtnTwoText))), React.createElement(\"div\", {\n        className: \"col-lg-5 col-md-6 offset-lg-1 offset-md-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"banner-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(ValidationForm, {\n        id: \"requestForm\",\n        onSubmit: function onSubmit(e, formData, inputs) {\n          e.preventDefault();\n\n          _this2.handleForm(formData);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.props.showcaseFormUName), React.createElement(TextInput, {\n        name: \"name\",\n        id: \"name\",\n        required: true,\n        successMessage: \"\",\n        errorMessage: \"Please enter your name\",\n        className: \"form-control\",\n        placeholder: \"Your Name\",\n        autoComplete: \"off\",\n        onChange: this.handleFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.props.showcaseFormUEmail), React.createElement(TextInput, {\n        name: \"email\",\n        id: \"email\",\n        type: \"email\",\n        required: true,\n        successMessage: \"\",\n        errorMessage: \"Please enter your email address\",\n        className: \"form-control\",\n        placeholder: \"Your Email\",\n        autoComplete: \"off\",\n        onChange: this.handleFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"help-block with-errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.props.showcaseFormUPhone), React.createElement(TextInput, {\n        name: \"phone\",\n        id: \"phone\",\n        type: \"text\",\n        required: true,\n        successMessage: \"\",\n        errorMessage: \"Please enter your phone number\",\n        className: \"form-control\",\n        placeholder: \"Your Phone\",\n        autoComplete: \"off\",\n        onChange: this.handleFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.props.showcaseFormUProblem), React.createElement(SelectGroup, {\n        name: \"problem\",\n        id: \"problem\",\n        value: this.state.color,\n        required: true,\n        errorMessage: \"Please select a option.\",\n        successMessage: \"\",\n        onChange: this.handleFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"- Tell us what you need -\"), React.createElement(\"option\", {\n        value: \"a website\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"a website\"), React.createElement(\"option\", {\n        value: \"a landing page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"a landing page\"), React.createElement(\"option\", {\n        value: \"an iPhone app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"an iPhone app\"), React.createElement(\"option\", {\n        value: \"an Android app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"an Android app\"))), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, this.props.showcaseFormBtnName)), this.state.successMsg !== \"\" ? React.createElement(\"h3\", {\n        className: \"contactMsg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, this.state.successMsg) : null)))))), React.createElement(\"div\", {\n        className: \"bg-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Showcase;\n}(Component); //Props Types\n\n\nShowcase.propTypes = {\n  showcasenName: PropTypes.string,\n  showcaseDescription: PropTypes.string,\n  showcaseBtnOneLink: PropTypes.string,\n  showcaseBtnOneText: PropTypes.string,\n  showcaseBtnTwoText: PropTypes.string,\n  showcaseFormUName: PropTypes.string,\n  showcaseFormUEmail: PropTypes.string,\n  showcaseFormUPhone: PropTypes.string,\n  showcaseFormUProblem: PropTypes.string,\n  showcaseFormBtnName: PropTypes.string\n}; //Default Props\n\nShowcase.defaultProps = {\n  showcasenName: \"Make your business more profitable\",\n  showcaseDescription: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. consectetur adipiscing elit, sed do eiusmod tempor incididunt ut.\",\n  showcaseBtnOneLink: \"#about\",\n  showcaseBtnOneText: \"Get Started\",\n  showcaseBtnTwoLink: \"//www.youtube.com/watch?v=vr0qNXmkUJ8\",\n  showcaseBtnTwoText: \"Watch Our Video\",\n  showcaseFormUName: \"Your Name\",\n  showcaseFormUEmail: \"Your Email\",\n  showcaseFormUPhone: \"Phone Number\",\n  showcaseFormUProblem: \"Problem\",\n  showcaseFormBtnName: \"Schedule Assessment\"\n};\nexport default Showcase;","map":{"version":3,"sources":["C:\\Users\\coolc\\Documents\\mybuycbd\\axolot\\src\\components\\versionFive\\Showcase.jsx"],"names":["React","Component","axios","PropTypes","ModalVideo","ValidationForm","TextInput","SelectGroup","Showcase","props","handleForm","e","that","post","state","headers","Accept","then","response","document","getElementById","reset","setState","successMsg","catch","error","handleFields","target","name","value","isOpen","openModal","bind","email","phone","problem","showcasenName","showcaseDescription","showcaseBtnOneLink","showcaseBtnOneText","showcaseBtnTwoText","formData","inputs","preventDefault","showcaseFormUName","showcaseFormUEmail","showcaseFormUPhone","showcaseFormUProblem","color","showcaseFormBtnName","propTypes","string","defaultProps","showcaseBtnTwoLink"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport \"react-modal-video/css/modal-video.min.css\";\nimport ModalVideo from \"react-modal-video\";\nimport { ValidationForm, TextInput, SelectGroup } from \"react-bootstrap4-form-validation\";\n\nclass Showcase extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            isOpen: false\n        };\n        this.openModal = this.openModal.bind(this);\n        super(props);\n        this.state = {\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            problem: \"\",\n            successMsg: \"\"\n        };\n    }\n\n    handleForm = e => {\n        let that = this;\n        axios\n            .post(\"https://formcarry.com/s/zER7_IhCyp5\", this.state, {\n                headers: { Accept: \"application/json\" }\n            })\n            .then(function(response) {\n                document.getElementById(\"requestForm\").reset();\n                that.setState({\n                    successMsg: \"We received your submission\"\n                });\n                document.getElementById(\"requestForm\").reset();\n            })\n            .catch(function(error) {});\n    };\n\n    handleFields = e => this.setState({ [e.target.name]: e.target.value });\n\n\n    openModal() {\n        this.setState({ isOpen: true });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div id=\"home\" className=\"main-banner\">\n                    <div className=\"creative-bg\" />\n                    <div className=\"pattern\" />\n\n                    <div className=\"d-table\">\n                        <div className=\"d-table-cell\">\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-6 col-md-6\">\n                                        <div className=\"main-banner-content\">\n                                            <h1>{this.props.showcasenName}</h1>\n                                            <p>\n                                                {this.props.showcaseDescription}\n                                            </p>\n                                            <a\n                                                href={\n                                                    this.props\n                                                        .showcaseBtnOneLink\n                                                }\n                                                className=\"btn btn-primary\"\n                                            >\n                                                {this.props.showcaseBtnOneText}\n                                            </a>\n\n                                            <ModalVideo\n                                                channel=\"youtube\"\n                                                isOpen={this.state.isOpen}\n                                                videoId=\"vr0qNXmkUJ8\"\n                                                onClose={() =>\n                                                    this.setState({\n                                                        isOpen: false\n                                                    })\n                                                }\n                                            />\n                                            <button\n                                                onClick={this.openModal}\n                                                className=\"btn btn-secondary \"\n                                            >\n                                                <i className=\"icofont-ui-play\" />\n                                                {this.props.showcaseBtnTwoText}\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-lg-5 col-md-6 offset-lg-1 offset-md-0\">\n                                        <div className=\"banner-form\">\n                                            <ValidationForm\n                                                    id=\"requestForm\"\n                                                    onSubmit={(e, formData, inputs) => {\n                                                        e.preventDefault();\n                                                        this.handleForm(formData);\n                                                    }}\n                                            >\n                                                <div className=\"form-group\">\n                                                    <label>{this.props.showcaseFormUName}</label>\n                                                    <TextInput\n                                                        name=\"name\"\n                                                        id=\"name\"\n                                                        required\n                                                        successMessage=\"\"\n                                                        errorMessage=\"Please enter your name\"\n                                                        className=\"form-control\"\n                                                        placeholder=\"Your Name\"\n                                                        autoComplete=\"off\"\n                                                        onChange={\n                                                            this.handleFields\n                                                        }\n                                                    />\n                                                </div>\n\n                                                <div className=\"form-group\">\n                                                    <label>{this.props.showcaseFormUEmail}</label>\n                                                    <TextInput\n                                                        name=\"email\"\n                                                        id=\"email\"\n                                                        type=\"email\"\n                                                        required\n                                                        successMessage=\"\"\n                                                        errorMessage=\"Please enter your email address\"\n                                                        className=\"form-control\"\n                                                        placeholder=\"Your Email\"\n                                                        autoComplete=\"off\"\n                                                        onChange={\n                                                            this.handleFields\n                                                        }\n                                                    />\n                                                    <div className=\"help-block with-errors\" />\n                                                </div>\n\n                                                <div className=\"form-group\">\n                                                    <label>{this.props.showcaseFormUPhone}</label>\n                                                    <TextInput\n                                                        name=\"phone\"\n                                                        id=\"phone\"\n                                                        type=\"text\"\n                                                        required\n                                                        successMessage=\"\"\n                                                        errorMessage=\"Please enter your phone number\"\n                                                        className=\"form-control\"\n                                                        placeholder=\"Your Phone\"\n                                                        autoComplete=\"off\"\n                                                        onChange={\n                                                            this.handleFields\n                                                        }\n                                                    />\n                                                </div>\n                                                \n                                                <div className=\"form-group\">\n                                                    <label>{this.props.showcaseFormUProblem}</label>\n                                                    <SelectGroup \n                                                        name=\"problem\" \n                                                        id=\"problem\"\n                                                        value={this.state.color} \n                                                        required \n                                                        errorMessage=\"Please select a option.\"\n                                                        successMessage=\"\"\n                                                        onChange={this.handleFields}>\n                                                        <option value=\"\">- Tell us what you need -</option>\n                                                        <option value=\"a website\">a website</option>\n                                                        <option value=\"a landing page\">a landing page</option>\n                                                        <option value=\"an iPhone app\">an iPhone app</option>\n                                                        <option value=\"an Android app\">an Android app</option>\n                                                    </SelectGroup>\n                                                </div>\n\n                                                <button type=\"submit\" className=\"btn btn-primary\">{this.props.showcaseFormBtnName}</button>\n                                            </ValidationForm>\n                                            {this.state.successMsg !== \"\" ? (\n                                                <h3 className=\"contactMsg\">\n                                                    {this.state.successMsg}\n                                                </h3>\n                                            ) : null}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"bg-bottom\" />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\n//Props Types\nShowcase.propTypes = {\n    showcasenName: PropTypes.string,\n    showcaseDescription: PropTypes.string,\n    showcaseBtnOneLink: PropTypes.string,\n    showcaseBtnOneText: PropTypes.string,\n    showcaseBtnTwoText: PropTypes.string,\n    showcaseFormUName: PropTypes.string,\n    showcaseFormUEmail: PropTypes.string,\n    showcaseFormUPhone: PropTypes.string,\n    showcaseFormUProblem: PropTypes.string,\n    showcaseFormBtnName: PropTypes.string,\n};\n\n//Default Props\nShowcase.defaultProps = {\n    showcasenName: \"Make your business more profitable\",\n    showcaseDescription:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. consectetur adipiscing elit, sed do eiusmod tempor incididunt ut.\",\n    showcaseBtnOneLink: \"#about\",\n    showcaseBtnOneText: \"Get Started\",\n    showcaseBtnTwoLink: \"//www.youtube.com/watch?v=vr0qNXmkUJ8\",\n    showcaseBtnTwoText: \"Watch Our Video\",\n    showcaseFormUName: \"Your Name\",\n    showcaseFormUEmail: \"Your Email\",\n    showcaseFormUPhone: \"Phone Number\",\n    showcaseFormUProblem: \"Problem\",\n    showcaseFormBtnName: \"Schedule Assessment\",\n};\n\nexport default Showcase;\n"]},"metadata":{},"sourceType":"module"}