{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\src\\\\components\\\\common\\\\Subscribe.jsx\";\nimport React, { Component } from \"react\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\n\nvar CustomForm = function CustomForm(_ref) {\n  var status = _ref.status,\n      message = _ref.message,\n      onValidated = _ref.onValidated;\n  var email;\n\n  var submit = function submit() {\n    return email && email.value.indexOf(\"@\") > -1 && onValidated({\n      EMAIL: email.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"subscribe-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: function ref(node) {\n      return email = node;\n    },\n    type: \"email\",\n    placeholder: \"Your Email Address\",\n    className: \"form-control\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Submit\"), status === \"sending\" && React.createElement(\"div\", {\n    className: \"subs-sending-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"sending...\"), status === \"error\" && React.createElement(\"div\", {\n    className: \"subs-error-msg\",\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), status === \"success\" && React.createElement(\"div\", {\n    className: \"subs-success-msg\",\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nvar Subscribe =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Subscribe, _Component);\n\n  function Subscribe() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Subscribe);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Subscribe)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Subscribe, [{\n    key: \"render\",\n    value: function render() {\n      var url = \"https://salahsoftwaresolution.us20.list-manage.com/subscribe/post?u=12beaf82e73f59e8b7d199a95&id=a7729f146f\";\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"subscribe-area ptb-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"bg-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"newsletter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Subscribe for the latest\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" Axolot\"), \" Updates\"), React.createElement(MailchimpSubscribe, {\n        url: url,\n        render: function render(_ref2) {\n          var subscribe = _ref2.subscribe,\n              status = _ref2.status,\n              message = _ref2.message;\n          return React.createElement(CustomForm, {\n            status: status,\n            message: message,\n            onValidated: function onValidated(formData) {\n              return subscribe(formData);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"pattern\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"pattern-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Subscribe;\n}(Component);\n\nexport default Subscribe;","map":{"version":3,"sources":["C:\\Users\\coolc\\Documents\\mybuycbd\\axolot\\src\\components\\common\\Subscribe.jsx"],"names":["React","Component","MailchimpSubscribe","CustomForm","status","message","onValidated","email","submit","value","indexOf","EMAIL","node","__html","Subscribe","state","url","subscribe","formData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nconst CustomForm = ({ status, message, onValidated }) => {\n    let email;\n    const submit = () =>\n        email &&\n        email.value.indexOf(\"@\") > -1 &&\n        onValidated({\n            EMAIL: email.value\n        });\n    return (\n        <div className=\"subscribe-form\">\n            <input\n                ref={node => (email = node)}\n                type=\"email\"\n                placeholder=\"Your Email Address\"\n                className=\"form-control\"\n                required\n            />\n            <button className=\"btn btn-primary\" onClick={submit}>\n                Submit\n            </button>\n            {status === \"sending\" && (\n                <div className=\"subs-sending-msg\">sending...</div>\n            )}\n            {status === \"error\" && (\n                <div\n                    className=\"subs-error-msg\"\n                    dangerouslySetInnerHTML={{ __html: message }}\n                />\n            )}\n            {status === \"success\" && (\n                <div\n                    className=\"subs-success-msg\"\n                    dangerouslySetInnerHTML={{ __html: message }}\n                />\n            )}\n        </div>\n    );\n};\n\nclass Subscribe extends Component {\n    state = {};\n    render() {\n        const url =\n            \"https://salahsoftwaresolution.us20.list-manage.com/subscribe/post?u=12beaf82e73f59e8b7d199a95&id=a7729f146f\";\n        return (\n            <React.Fragment>\n                <section className=\"subscribe-area ptb-100\">\n                    <div className=\"bg-top\" />\n                    <div className=\"bg-bottom\" />\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-12 col-md-12\">\n                                <div className=\"newsletter\">\n                                    <h4>\n                                        Subscribe for the latest\n                                        <span> Axolot</span> Updates\n                                    </h4>\n                                    <MailchimpSubscribe\n                                        url={url}\n                                        render={({\n                                            subscribe,\n                                            status,\n                                            message\n                                        }) => (\n                                            <CustomForm\n                                                status={status}\n                                                message={message}\n                                                onValidated={formData =>\n                                                    subscribe(formData)\n                                                }\n                                            />\n                                        )}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"pattern\" />\n                    <div className=\"pattern-2\" />\n                </section>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Subscribe;\n"]},"metadata":{},"sourceType":"module"}