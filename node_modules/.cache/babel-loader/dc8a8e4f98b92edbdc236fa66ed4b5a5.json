{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\coolc\\\\Documents\\\\mybuycbd\\\\axolot\\\\src\\\\components\\\\versionFour\\\\Showcase.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport \"react-modal-video/css/modal-video.min.css\";\nimport ModalVideo from \"react-modal-video\";\nimport { ValidationForm, TextInput, SelectGroup } from \"react-bootstrap4-form-validation\";\n\nvar Showcase =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Showcase, _Component);\n\n  function Showcase(props) {\n    var _this;\n\n    _classCallCheck(this, Showcase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Showcase).call(this));\n\n    _this.handleForm = function (e) {\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      axios.post(\"https://formcarry.com/s/zER7_IhCyp5\", _this.state, {\n        headers: {\n          Accept: \"application/json\"\n        }\n      }).then(function (response) {\n        document.getElementById(\"requestForm\").reset();\n        that.setState({\n          successMsg: \"We received your submission\"\n        });\n        document.getElementById(\"requestForm\").reset();\n      }).catch(function (error) {});\n    };\n\n    _this.handleFields = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.state = {\n      isOpen: false\n    };\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Showcase).call(this, props));\n\n    _this.handleForm = function (e) {\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      axios.post(\"https://formcarry.com/s/zER7_IhCyp5\", _this.state, {\n        headers: {\n          Accept: \"application/json\"\n        }\n      }).then(function (response) {\n        document.getElementById(\"requestForm\").reset();\n        that.setState({\n          successMsg: \"We received your submission\"\n        });\n        document.getElementById(\"requestForm\").reset();\n      }).catch(function (error) {});\n    };\n\n    _this.handleFields = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      quantity: \"\",\n      subject: \"\",\n      message: \"\",\n      successMsg: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Showcase, [{\n    key: \"openModal\",\n    value: function openModal() {\n      this.setState({\n        isOpen: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"home\",\n        className: \"main-banner bg-gray\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pattern-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"bg-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"bg-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"d-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-table-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main-banner-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.showcasenName), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.props.showcaseDescription), React.createElement(\"a\", {\n        href: this.props.showcaseBtnOneLink,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.props.showcaseBtnOneText), React.createElement(ModalVideo, {\n        channel: \"youtube\",\n        isOpen: this.state.isOpen,\n        videoId: \"vr0qNXmkUJ8\",\n        onClose: function onClose() {\n          return _this2.setState({\n            isOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.openModal,\n        className: \"btn btn-secondary \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icofont-ui-play\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), this.props.showcaseBtnTwoText))), React.createElement(\"div\", {\n        className: \"col-lg-5 col-md-6 offset-lg-1 offset-md-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main-banner-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.props.showcaseFormName), React.createElement(ValidationForm, {\n        id: \"requestForm\",\n        onSubmit: function onSubmit(e, formData, inputs) {\n          e.preventDefault();\n\n          _this2.handleForm(formData);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"name\",\n        id: \"name\",\n        required: true,\n        successMessage: \"\",\n        errorMessage: \"Please enter your name\",\n        className: \"form-control\",\n        placeholder: \"Your Name\",\n        autoComplete: \"off\",\n        onChange: this.handleFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"help-block with-errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"email\",\n        id: \"email\",\n        type: \"email\",\n        required: true,\n        successMessage: \"\",\n        errorMessage: \"Please enter your email address\",\n        className: \"form-control\",\n        placeholder: \"Your Email\",\n        autoComplete: \"off\",\n        onChange: this.handleFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"help-block with-errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(SelectGroup, {\n        name: \"subject\",\n        id: \"subject\",\n        value: this.state.color,\n        required: true,\n        errorMessage: \"Please select a option.\",\n        successMessage: \"\",\n        onChange: this.handleFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"- Tell us what you need -\"), React.createElement(\"option\", {\n        value: \"CBD Isolate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"CBD Isolate\"), React.createElement(\"option\", {\n        value: \"CBD distillate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"CBD distillate\"), React.createElement(\"option\", {\n        value: \"Biomass\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Biomass\"), React.createElement(\"option\", {\n        value: \"Water Solvent CBD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Water Solvent CBD\"))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(SelectGroup, {\n        name: \"subject\",\n        id: \"subject\",\n        value: this.state.color,\n        required: true,\n        errorMessage: \"Please select a option.\",\n        successMessage: \"\",\n        onChange: this.handleFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"- What approximate quantity? -\"), React.createElement(\"option\", {\n        value: \"0-500 grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"0-500 grams\"), React.createElement(\"option\", {\n        value: \"1-2 Kilo grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"1-2 Kilo grams\"), React.createElement(\"option\", {\n        value: \"3-10 Kilograms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"3-10 Kilograms\"), React.createElement(\"option\", {\n        value: \"11-49 Kilograms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"11-49 Kilograms\"), React.createElement(\"option\", {\n        value: \"Over 50 Kilograms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Over 50 Kilograms\"))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"message\",\n        id: \"description\",\n        multiline: true,\n        placeholder: \"Details\",\n        className: \"form-control\",\n        required: true,\n        successMessage: \"\",\n        errorMessage: \"Please write your message\",\n        rows: \"4\",\n        cols: \"30\",\n        autoComplete: \"off\",\n        onChange: this.handleFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, this.props.showcaseFormBtnName)), this.state.successMsg !== \"\" ? React.createElement(\"h3\", {\n        className: \"contactMsg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, this.state.successMsg) : null)))))), React.createElement(\"div\", {\n        className: \"pattern\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Showcase;\n}(Component); //Props Types\n\n\nShowcase.propTypes = {\n  showcasenName: PropTypes.string,\n  showcaseDescription: PropTypes.string,\n  showcaseBtnOneLink: PropTypes.string,\n  showcaseBtnOneText: PropTypes.string,\n  showcaseBtnTwoText: PropTypes.string,\n  showcaseFormName: PropTypes.string,\n  showcaseFormBtnName: PropTypes.string\n}; //Default Props\n\nShowcase.defaultProps = {\n  showcasenName: \"Highest Quality CBD in the Market\",\n  showcaseDescription: \"MyBuyCBD sells only the highest quality CBD. We are a reseller who only sells pure and potent CBD oil, sourced from organic hemp, full-spectrum CBD extracts, extracted with ethical methods, and lab tested for quality.\",\n  showcaseBtnOneLink: \"#about\",\n  showcaseBtnOneText: \"Get Started\",\n  showcaseBtnTwoLink: \"//www.youtube.com/watch?v=vr0qNXmkUJ8\",\n  showcaseBtnTwoText: \"Watch Our Video\",\n  showcaseFormName: \"Request A Free Quote\",\n  showcaseFormBtnName: \"Get a Quote\"\n};\nexport default Showcase;","map":{"version":3,"sources":["C:\\Users\\coolc\\Documents\\mybuycbd\\axolot\\src\\components\\versionFour\\Showcase.jsx"],"names":["React","Component","axios","PropTypes","ModalVideo","ValidationForm","TextInput","SelectGroup","Showcase","props","handleForm","e","that","post","state","headers","Accept","then","response","document","getElementById","reset","setState","successMsg","catch","error","handleFields","target","name","value","isOpen","openModal","bind","email","quantity","subject","message","showcasenName","showcaseDescription","showcaseBtnOneLink","showcaseBtnOneText","showcaseBtnTwoText","showcaseFormName","formData","inputs","preventDefault","color","showcaseFormBtnName","propTypes","string","defaultProps","showcaseBtnTwoLink"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport \"react-modal-video/css/modal-video.min.css\";\nimport ModalVideo from \"react-modal-video\";\nimport { ValidationForm, TextInput, SelectGroup } from \"react-bootstrap4-form-validation\";\n\n\nclass Showcase extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            isOpen: false\n        };\n        this.openModal = this.openModal.bind(this);\n        super(props);\n        this.state = {\n            name: \"\",\n            email: \"\",\n            quantity: \"\",\n            subject: \"\",\n            message: \"\",\n            successMsg: \"\"\n        };\n    }\n\n\n\n    handleForm = e => {\n        let that = this;\n        axios\n            .post(\"https://formcarry.com/s/zER7_IhCyp5\", this.state, {\n                headers: { Accept: \"application/json\" }\n            })\n            .then(function(response) {\n                document.getElementById(\"requestForm\").reset();\n                that.setState({\n                    successMsg: \"We received your submission\"\n                });\n                document.getElementById(\"requestForm\").reset();\n            })\n            .catch(function(error) {});\n    };\n\n    handleFields = e => this.setState({ [e.target.name]: e.target.value });\n\n\n\n    openModal() {\n        this.setState({ isOpen: true });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div id=\"home\" className=\"main-banner bg-gray\">\n                    <div className=\"pattern-2\" />\n                    <div className=\"bg-top\" />\n                    <div className=\"bg-bottom\" />\n                    <div className=\"d-table\">\n                        <div className=\"d-table-cell\">\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-6 col-md-6\">\n                                        <div className=\"main-banner-content\">\n                                            <h1>{this.props.showcasenName}</h1>\n                                            <p>\n                                                {this.props.showcaseDescription}\n                                            </p>\n                                            <a\n                                                href={\n                                                    this.props\n                                                        .showcaseBtnOneLink\n                                                }\n                                                className=\"btn btn-primary\"\n                                            >\n                                                {this.props.showcaseBtnOneText}\n                                            </a>\n\n                                            <ModalVideo\n                                                channel=\"youtube\"\n                                                isOpen={this.state.isOpen}\n                                                videoId=\"vr0qNXmkUJ8\"\n                                                onClose={() =>\n                                                    this.setState({\n                                                        isOpen: false\n                                                    })\n                                                }\n                                            />\n                                            <button\n                                                onClick={this.openModal}\n                                                className=\"btn btn-secondary \"\n                                            >\n                                                <i className=\"icofont-ui-play\" />\n                                                {this.props.showcaseBtnTwoText}\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-lg-5 col-md-6 offset-lg-1 offset-md-0\">\n                                        <div className=\"main-banner-form\">\n                                            <h3>{this.props.showcaseFormName}</h3>\n                                            <ValidationForm\n                                                id=\"requestForm\"\n                                                onSubmit={(e, formData, inputs) => {\n                                                    e.preventDefault();\n                                                    this.handleForm(formData);\n                                                }}\n                                            >\n                                                <div className=\"form-group\">\n                                                    <TextInput\n                                                        name=\"name\"\n                                                        id=\"name\"\n                                                        required\n                                                        successMessage=\"\"\n                                                        errorMessage=\"Please enter your name\"\n                                                        className=\"form-control\"\n                                                        placeholder=\"Your Name\"\n                                                        autoComplete=\"off\"\n                                                        onChange={\n                                                            this.handleFields\n                                                        }\n                                                    />\n                                                    <div className=\"help-block with-errors\" />\n                                                </div>\n\n                                                <div className=\"form-group\">\n                                                    <TextInput\n                                                        name=\"email\"\n                                                        id=\"email\"\n                                                        type=\"email\"\n                                                        required\n                                                        successMessage=\"\"\n                                                        errorMessage=\"Please enter your email address\"\n                                                        className=\"form-control\"\n                                                        placeholder=\"Your Email\"\n                                                        autoComplete=\"off\"\n                                                        onChange={\n                                                            this.handleFields\n                                                        }\n                                                    />\n                                                    <div className=\"help-block with-errors\" />\n                                                </div>\n\n                                                <div className=\"form-group\">\n                                                    <SelectGroup\n                                                        name=\"subject\"\n                                                        id=\"subject\"\n                                                        value={this.state.color}\n                                                        required\n                                                        errorMessage=\"Please select a option.\"\n                                                        successMessage=\"\"\n                                                        onChange={this.handleFields}>\n                                                        <option value=\"\">- Tell us what you need -</option>\n                                                        <option value=\"CBD Isolate\">CBD Isolate</option>\n                                                        <option value=\"CBD distillate\">CBD distillate</option>\n                                                        <option value=\"Biomass\">Biomass</option>\n                                                        <option value=\"Water Solvent CBD\">Water Solvent CBD</option>\n                                                    </SelectGroup>\n                                                </div>\n\n                                                <div className=\"form-group\">\n                                                    <SelectGroup\n                                                        name=\"subject\"\n                                                        id=\"subject\"\n                                                        value={this.state.color}\n                                                        required\n                                                        errorMessage=\"Please select a option.\"\n                                                        successMessage=\"\"\n                                                        onChange={this.handleFields}>\n                                                        <option value=\"\">- What approximate quantity? -</option>\n                                                        <option value=\"0-500 grams\">0-500 grams</option>\n                                                        <option value=\"1-2 Kilo grams\">1-2 Kilo grams</option>\n                                                        <option value=\"3-10 Kilograms\">3-10 Kilograms</option>\n                                                        <option value=\"11-49 Kilograms\">11-49 Kilograms</option>\n                                                        <option value=\"Over 50 Kilograms\">Over 50 Kilograms</option>\n                                                    </SelectGroup>\n                                                </div>\n\n                                                <div className=\"form-group\">\n                                                    <TextInput\n                                                        name=\"message\"\n                                                        id=\"description\"\n                                                        multiline\n                                                        placeholder=\"Details\"\n                                                        className=\"form-control\"\n                                                        required\n                                                        successMessage=\"\"\n                                                        errorMessage=\"Please write your message\"\n                                                        rows=\"4\"\n                                                        cols=\"30\"\n                                                        autoComplete=\"off\"\n                                                        onChange={\n                                                            this.handleFields\n                                                        }\n                                                    />\n                                                </div>\n\n                                                <button type=\"submit\" className=\"btn btn-primary\">{this.props.showcaseFormBtnName}</button>\n                                            </ValidationForm>\n                                            {this.state.successMsg !== \"\" ? (\n                                                <h3 className=\"contactMsg\">\n                                                    {this.state.successMsg}\n                                                </h3>\n                                            ) : null}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"pattern\" />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\n//Props Types\nShowcase.propTypes = {\n    showcasenName: PropTypes.string,\n    showcaseDescription: PropTypes.string,\n    showcaseBtnOneLink: PropTypes.string,\n    showcaseBtnOneText: PropTypes.string,\n    showcaseBtnTwoText: PropTypes.string,\n    showcaseFormName: PropTypes.string,\n    showcaseFormBtnName: PropTypes.string\n};\n\n//Default Props\nShowcase.defaultProps = {\n    showcasenName: \"Highest Quality CBD in the Market\",\n    showcaseDescription:\n        \"MyBuyCBD sells only the highest quality CBD. We are a reseller who only sells pure and potent CBD oil, sourced from organic hemp, full-spectrum CBD extracts, extracted with ethical methods, and lab tested for quality.\",\n    showcaseBtnOneLink: \"#about\",\n    showcaseBtnOneText: \"Get Started\",\n    showcaseBtnTwoLink: \"//www.youtube.com/watch?v=vr0qNXmkUJ8\",\n    showcaseBtnTwoText: \"Watch Our Video\",\n    showcaseFormName: \"Request A Free Quote\",\n    showcaseFormBtnName: \"Get a Quote\",\n};\n\nexport default Showcase;\n"]},"metadata":{},"sourceType":"module"}